extends layout

block title
    //show page title from the title object in underlying model
    h1.well #{title}
block content

    //this well will hold answers of the room
    .thumbnail(id = "answersHolder" style='display: none')
        p#answers 

    div(id='spin' style="display:none; margin-left:50%; margin-right:50%")

    .form-group
        input#chatTextBox(type='text' class='form-control' placeholder='Unesi tekst' style='margin-bottom: 10px; display: none')
        button#sendButton(type='submit' class='btn btn-default' style='display: none') 
            span.glyphicon.glyphicon-send
            &nbsp;&nbsp;Pošalji!

    script(src='/javascripts/websockets.js')
    script(type='text/javascript').
        //both the room and username is determined from the jade html template
        var roomName = '#{title}' 
        var userName = '#{username}'
        var opts = {
            lines: 17 // The number of lines to draw
            , length: 0 // The length of each line
            , width: 10 // The line thickness
            , radius: 54 // The radius of the inner circle
            , scale: 1 // Scales overall size of the spinner
            , corners: 1 // Corner roundness (0..1)
            , color: '#000' // #rgb or #rrggbb or array of colors
            , opacity: 0.1 // Opacity of the lines
            , rotate: 0 // The rotation offset
            , direction: 1 // 1: clockwise, -1: counterclockwise
            , speed: 1 // Rounds per second
            , trail: 80 // Afterglow percentage
            , fps: 20 // Frames per second when using setTimeout() as a fallback for CSS
            , zIndex: 2e9 // The z-index (defaults to 2000000000)
            , className: 'spinner' // The CSS class to assign to the spinner
            , top: '50%' // Top position relative to parent
            , left: '-64px' // Left position relative to parent
            , shadow: false // Whether to render a shadow
            , hwaccel: false // Whether to use hardware acceleration
            , position: 'relative' // Element positioning
        }
        var target = document.getElementById('spin');
        var spinner = new Spinner(opts);
        //connect to the server using the socket.io front-end js library
        io
        //send the a message to the 'ready' route with the room and the username
        io.emit('userConnected', { roomName : roomName, username: userName });

        